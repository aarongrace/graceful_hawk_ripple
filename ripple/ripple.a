	USE	"hawk.h"	
	USE	"stdio.h"
	USE	"stdlib.h"
	USE	"common.h"

;MACRO SET_FIELD_TO_RAND	reg, field, =max
;	LIL	R4,max
;	TOSUBR	GET_RANDOM_NUMBER
;	STORE	R3,reg,field
;ENDMAC
;|||||||||||||||||||||||||||||||||||||||||||||||||||||
;	INT	RIPPLE_CONSTRUCTOR
ARSIZE=4
RIPPLE_CONSTRUCTOR:
	C_S
	
	TOSUBR_3 MALLOC, RIPPLE_SIZE
	MOVE	R8,R3	; use R8 as the holder for the new ripple obj
	
	TOSUBR	RAND
	LIL	R4,#1F
	AND	R3,R4	; get rand(0,31)
	ADDI	R3,R3,-20	; get rand(-20,11)
	STORE	R3,R8,RIPPLE_X

	TOSUBR	RAND
	LIL	R4,#F
	AND	R3,R4	; get rand(0,15)
	ADDI	R3,R3,-9	; get rand(-9,7)
	STORE	R3,R8,RIPPLE_Y

	LIS	R3,1
	STORE	R3,R8,RIPPLE_RAD

	LIS	R3,3
	STORE	R3,R8,RIPPLE_WIDTH

	TOSUBR	RAND
	LIL	R4,#F
	AND	R3,R4
	LIL	R4,#2
	OR	R3,R4	; get rand(2,15)
	STORE	R3,R8,RIPPLE_LIFE

	MOVE	R3,R8
	R_S

;||||||||||||||||||||||||||||||||||||||
	COMMON	PREVIOUSLY_ADDED,8
;	S	ADD_RIPPLE
	INT	ADD_RIPPLE	
EMPTY_SLOT=4
ARSIZE=8
ADD_RIPPLE:
	; takes nothing returns nothing
	C_S

	LIL	R5, PREVIOUSLY_ADDED
	LOADS	R3,R5
	LIS	R3,0
	TESTR	R3
	BZS	AD_DID_NOT_ADD
	LIS	R4,0
	STORES	R4,R5
	BR	AR_QT

AD_DID_NOT_ADD:

	LIS	R5, 0	; array index
	LIL	R3,RIPPLE_ARRAY
AD_FIND_EMPTY_LP:;-------------------- array scope
	LOADS	R6,R3
	TESTR	R6
	BZS	AD_EMPTY_FOUND

	ADDSI	R3,4
	ADDSI	R5,1
	CMPI	R5,MAX_RIPPLE_NUM
	BLT	AD_FIND_EMPTY_LP
	BR	AR_QT	; if we iterate through whole array and can't find an empty slot
;-------------------------------------end array scope	
AD_EMPTY_FOUND:
	STORE	R3,R2,EMPTY_SLOT-ARSIZE
	TOSUBR	RIPPLE_CONSTRUCTOR	
	LOAD	R4,R2,EMPTY_SLOT-ARSIZE
	STORES	R3,R4

	LIS	R4,1
	LIL	R5, PREVIOUSLY_ADDED
	STORES	R4,R5
AR_QT:
	R_S

;|||||||||||||||||||||||||||||||||||||||||||||||||||||
	EXT	DRAW_CIRCLE
	INT	DRAW_RIPPLE
RIP_POINTER=4
ARSIZE=8
DRAW_RIPPLE:
	; takes R3, address of the ripple
	; returns R6, the remaining life of the ripple
	C_S
	STORE	R3,R2,RIP_POINTER-ARSIZE
	MOVE	R7,R3
	LOAD	R3,R7,RIPPLE_RAD
	LOAD	R4,R7,RIPPLE_X
	LOAD	R5,R7,RIPPLE_Y
	LOAD	R6,R7,RIPPLE_LIFE
	; takes R3=rad,R4,center_x,R5=center_y,R6=char
	TOSUBR	DRAW_CIRCLE

	LOAD	R7,R2,RIP_POINTER-ARSIZE
	LOAD	R3,R7,RIPPLE_RAD
	LOAD	R6,R7,RIPPLE_LIFE
	ADDSI	R3,1
	ADDSI	R6,-1
	STORE	R3,R7,RIPPLE_RAD
	STORE	R6,R7,RIPPLE_LIFE

	R_S



;ARSIZE=4
;GET_RANDOM_NUMBER:
;	; takes R4, max
;	; returns R3, random number
;	C_S
;	TOSUBR	RAND
;	CMPI	R3,14
;	ADDSI	R3,-1
;	R_S
;
